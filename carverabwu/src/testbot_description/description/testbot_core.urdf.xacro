<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >

    <xacro:macro name="testbot_core" params="">

        <xacro:include filename="inertial_macros.xacro" />

        <xacro:include filename="testbot_common.xacro" />
        <xacro:testbot_common/>

        <xacro:include filename="testbot_ros2control.xacro" />
        <xacro:testbot_control/>

        <!-- BASE LINK -->

        <link name="base_link">
            <visual>
            <geometry>
                <box size="0.01 0.01 0.01"/>
            </geometry>
            <material name="Cyan">
                <color rgba="0 1.0 1.0 1.0"/>
            </material>
            </visual>
        </link>

        <!-- BASE_FOOTPRINT LINK -->

        <!-- For Velocity Controller -->
        <joint name="base_footprint_joint" type="fixed">
            <parent link="base_footprint"/>
            <child link="base_link"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </joint>

        <!-- For Differantial Drive Controller -->
        <!-- <joint name="base_footprint_joint" type="fixed">
            <parent link="base_link"/>
            <child link="base_footprint"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </joint> -->

        <!-- <origin xyz="0 0 ${-wheel_radius + wheel_offset_z}" rpy="0 0 0"/> -->

        <link name="base_footprint">
        </link>

        <!-- CHASSIS Information -->
        
        <!--joint-->
        <joint name="chassis_joint" type="fixed">
            <parent link="base_link"/>
            <child link="chassis"/>
            <origin xyz="${-wheel_offset_x} 0 ${-wheel_offset_z}"/>
        </joint>
        
        <!--link-->
        <link name="chassis">
        <visual>
            <!-- <origin xyz="${chassis_length/2} 0 ${chassis_height/2}"/> -->
            <origin xyz="${chassis_length/2} 0 -0.10"/>
            <!-- <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry> -->
            <geometry>
                <mesh filename="file://$(find testbot_description)/meshes/mir_100_base.stl"/>
            </geometry>
            <material name="grey"/>
        </visual>
        <collision>
            <!-- <origin xyz="${chassis_length/2} 0 ${chassis_height/2}"/> -->
            <origin xyz="${chassis_length/2} 0 -0.10"/>
            <!-- <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry> -->
            <geometry>
                <mesh filename="file://$(find testbot_description)/meshes/mir_100_base.stl"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="100" x="${chassis_length}" y="${chassis_width}" z="${chassis_height}">
            <origin xyz="${chassis_length/2} 0 ${chassis_height/2}" rpy="0 0 0"/>
        </xacro:inertial_box>
        </link>
        
        <!-- LEFT WHEEL -->

        <joint name="left_wheel_joint" type="continuous">
            <parent link="base_link"/>
            <child link="left_wheel"/>
            <origin xyz="0 ${wheel_offset_y} 0" rpy="-${pi/2} 0 0" />
            <axis xyz="0 0 1"/>
        </joint>

        <link name="left_wheel">
        <visual>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
                </geometry>
                <material name="blue"/>
            </visual>
            <collision>
                <geometry>
                    <sphere radius="${wheel_radius}"/>
                </geometry>
            </collision>
            <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}" radius="${wheel_radius}">
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </xacro:inertial_cylinder>
        </link>

        <gazebo reference="left_wheel">
            <material>Gazebo/Black</material>
        </gazebo>

        <!-- RIGHT WHEEL -->

        <joint name="right_wheel_joint" type="continuous">
            <parent link="base_link"/>
            <child link="right_wheel"/>
            <origin xyz="0 ${-wheel_offset_y} 0" rpy="${pi/2} 0 0" />
            <axis xyz="0 0 -1"/>
        </joint>

        <link name="right_wheel">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
        </link>

        <gazebo reference="right_wheel">
            <material>Gazebo/Black</material>
        </gazebo>

        <!-- CASTER WHEEL FONT RIGHT -->

        <joint name="caster_wheel_f_r_joint" type="fixed">
            <parent link="base_link"/>
            <child link="caster_wheel_f_r"/>
            <origin xyz="${caster_wheel_offset_x} ${caster_wheel_offset_y} ${caster_wheel_offset_z}"/>
        </joint>

        <link name="caster_wheel_f_r">
            <visual>
                <geometry>
                    <sphere radius="${caster_wheel_radius}"/>
                </geometry>
                <material name="white"/>
            </visual>
            <collision>
                <geometry>
                    <sphere radius="${caster_wheel_radius}"/>
                </geometry>
            </collision>
            <xacro:inertial_sphere mass="${caster_wheel_mass}" radius="${caster_wheel_radius}">
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </xacro:inertial_sphere>
        </link>

        <gazebo reference="caster_wheel_f_r">
            <material>Gazebo/Blue</material>
            <mu1 value="0.001"/>
            <mu2 value="0.001"/>
        </gazebo>

        <!-- CASTER WHEEL FONT LEFT -->
        <joint name="caster_wheel_f_l_joint" type="fixed">
            <parent link="base_link"/>
            <child link="caster_wheel_f_l"/>
            <origin xyz="${caster_wheel_offset_x} ${-caster_wheel_offset_y} ${caster_wheel_offset_z}"/>
        </joint>

        <link name="caster_wheel_f_l">
            <visual>
                <geometry>
                    <sphere radius="${caster_wheel_radius}"/>
                </geometry>
                <material name="white"/>
            </visual>
            <collision>
                <geometry>
                    <sphere radius="${caster_wheel_radius}"/>
                </geometry>
            </collision>
            <xacro:inertial_sphere mass="${caster_wheel_mass}" radius="${caster_wheel_radius}">
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </xacro:inertial_sphere>
        </link>
        
        <gazebo reference="caster_wheel_f_l">
            <material>Gazebo/Blue</material>
            <mu1 value="0.001"/>
            <mu2 value="0.001"/>
        </gazebo>

        <!-- CASTER WHEEL BACK RIGHT -->
        <joint name="caster_wheel_r_r_joint" type="fixed">
            <parent link="base_link"/>
            <child link="caster_wheel_r_r"/>
            <origin xyz="${-caster_wheel_offset_x} ${caster_wheel_offset_y} ${caster_wheel_offset_z}"/>
        </joint>

        <link name="caster_wheel_r_r">
            <visual>
                <geometry>
                    <sphere radius="${caster_wheel_radius}"/>
                </geometry>
                <material name="white"/>
            </visual>
            <collision>
                <geometry>
                    <sphere radius="${caster_wheel_radius}"/>
                </geometry>
            </collision>
            <xacro:inertial_sphere mass="${caster_wheel_mass}" radius="${caster_wheel_radius}">
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </xacro:inertial_sphere>
        </link>

        <gazebo reference="caster_wheel_r_r">
            <material>Gazebo/Blue</material>
            <mu1 value="0.001"/>
            <mu2 value="0.001"/>
        </gazebo>

        <!-- CASTER WHEEL BACK LEFT -->
        <joint name="caster_wheel_r_l_joint" type="fixed">
            <parent link="base_link"/>
            <child link="caster_wheel_r_l"/>
            <origin xyz="${-caster_wheel_offset_x} ${-caster_wheel_offset_y} ${caster_wheel_offset_z}"/>
        </joint>

        <link name="caster_wheel_r_l">
            <visual>
                <geometry>
                    <sphere radius="${caster_wheel_radius}"/>
                </geometry>
                <material name="white"/>
            </visual>
            <collision>
                <geometry>
                    <sphere radius="${caster_wheel_radius}"/>
                </geometry>
            </collision>
            <xacro:inertial_sphere mass="${caster_wheel_mass}" radius="${caster_wheel_radius}">
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </xacro:inertial_sphere>
        </link>

        <gazebo reference="caster_wheel_r_l">
            <material>Gazebo/Black</material>
            <mu1 value="0.001"/>
            <mu2 value="0.001"/>
        </gazebo>

        <!-- Laser  -->
        <joint name="laser_joint" type="fixed">
            <parent link="base_link"/>
            <child link="lidar_link"/>
            <origin xyz="0.122 0 0.312" rpy="0 0 0"/>
        </joint>

        <link name="lidar_link">
            <visual>
                <geometry>
                    <cylinder radius="0.05" length="0.04"/>
                </geometry>
                <material name="red"/>
            </visual>
            <visual>
                <origin xyz="0 0 -0.05"/>
                <geometry>
                    <cylinder radius="0.01" length="0.1"/>
                </geometry>
                <material name="red"/>
            </visual>
        </link>

        <gazebo reference="lidar_link">
                <material>Gazebo/Red</material>
        </gazebo>

    </xacro:macro>

</robot>