<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="obstacle_bot">

    <xacro:include filename="inertial_macros.xacro"/>

    <xacro:macro name="obstacle_bot_common">
        <xacro:property name="chassis_length" value="1.0" scope="parent"/>
        <xacro:property name="chassis_radius" value="0.4" scope="parent"/>
        <xacro:property name="chassis_mass" value="10" scope="parent"/>
        <xacro:property name="wheel_radius" value="0.05" scope="parent"/>


    </xacro:macro>
    <xacro:obstacle_bot_common/>

    <!-- BASE LINK -->

    <link name="base_link">

    </link>


    <!-- CHASSIS LINK -->

    <joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="chassis"/>
        <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0"/>
    </joint>

    <link name="chassis">
        <visual>
            <origin xyz="0 0 ${chassis_length/2}"/>
            <geometry>
                <cylinder radius="${chassis_radius}" length="${chassis_length}"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 ${chassis_length/2}"/>
            <geometry>
                <cylinder radius="${chassis_radius}" length="${chassis_length}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${chassis_mass}" length="${chassis_length}" radius="${chassis_radius}">
            <origin xyz="0 0 ${chassis_length/2}" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="chassis">
        <material>Gazebo/Red</material>
    </gazebo>

    <!-- CASTER WHEEL FONT LINK -->

    <joint name="caster_wheel_font_joint" type="fixed">
        <parent link="base_link"/>
        <child link="caster_wheel_font"/>
        <origin xyz="${chassis_radius - wheel_radius} 0 0" rpy="0 0 0" />
    </joint>

    <link name="caster_wheel_font">
        <visual>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <xacro:inertial_sphere mass="0.1" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_sphere>
    </link>

    <gazebo reference="caster_wheel_font">
        <material>Gazebo/Black</material>
        <mu1 value="0.001"/>
        <mu2 value="0.001"/>
    </gazebo>

    <!-- CASTER WHEEL BACK LINK -->

    <joint name="caster_wheel_back_joint" type="fixed">
        <parent link="base_link"/>
        <child link="caster_wheel_back"/>
        <origin xyz="-${chassis_radius - wheel_radius} 0 0" rpy="0 0 0" />
    </joint>

    <link name="caster_wheel_back">
        <visual>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <xacro:inertial_sphere mass="0.1" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_sphere>
    </link>

    <gazebo reference="caster_wheel_back">
        <material>Gazebo/Black</material>
        <mu1 value="0.001"/>
        <mu2 value="0.001"/>
    </gazebo>

    <!-- LEFT WHEEL LINK -->

    <joint name="left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel"/>
        <origin xyz="0 ${chassis_radius - wheel_radius} 0" rpy="-${pi/2} 0 0" />
        <axis xyz="0 0 1"/>
    </joint>

    <link name="left_wheel">
        <visual>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <xacro:inertial_sphere mass="0.1" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_sphere>
    </link>

    <gazebo reference="left_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>

    <!-- RIGHT WHEEL LINK -->

    <joint name="right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel"/>
        <origin xyz="0 -${chassis_radius - wheel_radius} 0" rpy="${pi/2} 0 0" />
        <axis xyz="0 0 -1"/>
    </joint>

    <link name="right_wheel">
        <visual>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <xacro:inertial_sphere mass="0.1" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_sphere>
    </link>

    <gazebo reference="right_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>

    <!-- Font indicator link -->

    <joint name="font_indicator_joint" type="fixed">
        <parent link="chassis"/>
        <child link="font_indicator"/>
        <origin xyz="${chassis_radius - 0.1} 0 ${chassis_length}" rpy="0 0 0"/>
    </joint>

    <link name="font_indicator">
        <visual>
            <geometry>
                <cylinder radius="0.1" length="0.1"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.1" length="0.1"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.1" radius="0.1">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="font_indicator">
        <material>Gazebo/Black</material>
    </gazebo>


    <gazebo>
        <plugin name="diff_drive" filename="libgazebo_ros_diff_drive.so">

            <!-- Wheel Information -->
            <left_joint>left_wheel_joint</left_joint>
            <right_joint>right_wheel_joint</right_joint>
            <wheel_separation>${(chassis_radius - wheel_radius)*2}</wheel_separation>
            <wheel_diameter>${2*wheel_radius}</wheel_diameter>


            <!-- Limits -->
            <max_wheel_torque>200</max_wheel_torque>
            <max_wheel_acceleration>10.0</max_wheel_acceleration>

            
            <!-- Output -->
            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>base_link</robot_base_frame>

            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <publish_wheel_tf>true</publish_wheel_tf>

        </plugin>
    </gazebo>

</robot>